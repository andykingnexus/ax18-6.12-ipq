This workflow automates the building of ImmortalWrt firmware.
It is designed to be used with a user's own repository containing
custom configurations and files.
name: Build ImmortalWrt AX18 (Final)

on:
workflow_dispatch:
push:
branches:
- main

env:

The URL of the official ImmortalWrt source code
REPO_URL: https://github.com/immortalwrt/immortalwrt
REPO_BRANCH: master
CONFIG_FILE: ax18nano.config
THREAD_COUNT: $(nproc)
FIRMWARE_NAME: immortalwrt-ax18
TZ: Asia/Shanghai

jobs:
build:
runs-on: ubuntu-22.04

steps:
  - name: Checkout user's repository for custom files
    # This step checks out YOUR repository (e.g., VIKINGYFY/immortalwrt)
    # to access your custom-files and .config files.
    uses: actions/checkout@v4

  - name: Set up environment and install dependencies
    run: |
      sudo timedatectl set-timezone "$TZ"
      sudo apt-get update
      sudo apt-get install -y build-essential flex bison gawk \
        libncurses5-dev libncursesw5-dev zlib1g-dev gettext \
        libssl-dev python3 python3-distutils rsync unzip \
        wget git subversion ccache
  
  - name: Cache build files
    uses: actions/cache@v4
    with:
      path: |
        ~/ccache
        ~/immortalwrt/dl
      key: ${{ runner.os }}-immortalwrt-${{ hashFiles('**/ax18nano.config', '**/custom-files/**') }}
      restore-keys: |
        ${{ runner.os }}-immortalwrt-

  - name: Set up ccache
    run: |
      mkdir -p ~/ccache
      ccache -M 5G
      ccache -s

  - name: Clone ImmortalWrt official source code
    # This step clones the OFFICIAL ImmortalWrt repository.
    run: |
      git clone --depth=1 -b "$REPO_BRANCH" "$REPO_URL" immortalwrt
      echo "PATH=$HOME/ccache:$PATH" >> $GITHUB_ENV

  - name: Update feeds
    working-directory: ./immortalwrt
    run: |
      ./scripts/feeds update -a
      ./scripts/feeds install -a

  - name: Load custom configuration and files
    # This is a crucial step to copy your custom files into the
    # cloned ImmortalWrt source directory.
    run: |
      cp "$CONFIG_FILE" ./immortalwrt/.config
      
      if [ -d "custom-files" ]; then
        echo "Custom files found. Copying to build root."
        cp -rf ./custom-files/* ./immortalwrt/files/
      else
        echo "No custom files found. Skipping."
      fi
      
      # Run make defconfig after copying the .config file
      cd immortalwrt
      make defconfig

  - name: Download package sources
    id: download
    working-directory: ./immortalwrt
    run: |
      make download -j"$THREAD_COUNT"
      find dl -size -1024c -exec rm -f {} \;

  - name: Build firmware
    id: compile
    working-directory: ./immortalwrt
    run: |
      make -j"$THREAD_COUNT" || make -j1 V=s

  - name: Organize firmware files
    id: organize
    if: steps.compile.outcome == 'success'
    run: |
      cd immortalwrt/bin/targets/*/*
      rm -rf packages
      echo "FIRMWARE_PATH=$(pwd)" >> $GITHUB_ENV

  - name: Upload firmware artifact
    uses: actions/upload-artifact@v4
    if: steps.compile.outcome == 'success'
    with:
      name: ${{ env.FIRMWARE_NAME }}
      path: ${{ env.FIRMWARE_PATH }}

